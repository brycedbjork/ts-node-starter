{"version":3,"sources":["../../src/utils/authenticate.ts"],"names":["wrapped","req","res","uid","body","token","auth","verifyIdToken","decodedToken","apply","Error","Sentry","captureException","status","send"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA;;;AAGe,kBAASA,OAAT,EAAuB;AACpC;AAAA;AAAA;AAAA;AAAA,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,cAAAA,GADD,GACY,MAAU,CAAV,CADZ;AAECC,cAAAA,GAFD,GAEO,MAAU,CAAV,CAFP;AAAA;AAIGC,cAAAA,GAJH,GAIiBF,GAAG,CAACG,IAAJ,CAASD,GAJ1B;AAKGE,cAAAA,KALH,GAKmBJ,GAAG,CAACG,IAAJ,CAASC,KAL5B,EAMH;;AANG;AAAA,qBAOwBC,eAAKC,aAAL,CAAmBF,KAAnB,CAPxB;;AAAA;AAOGG,cAAAA,YAPH;;AAAA,oBAQCA,YAAY,CAACL,GAAb,IAAoBA,GARrB;AAAA;AAAA;AAAA;;AAAA,+CASMH,OAAO,CAACS,KAAR,CAAc,IAAd,QATN;;AAAA;AAAA,oBAWK,IAAIC,KAAJ,CAAU,sCAAV,CAXL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcHC,cAAAA,MAAM,CAACC,gBAAP;AAdG,+CAeIV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAArB,CAfJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAAA;AAkBD","sourcesContent":["import { auth } from \"../firebase\";\nimport * as Sentry from \"@sentry/node\";\n\n/*\n  wraps express routes and authenticates the passed token\n*/\nexport default function(wrapped: any) {\n  return async function(this: any) {\n    const req: any = arguments[0];\n    const res = arguments[1];\n    try {\n      const uid: string = req.body.uid;\n      const token: string = req.body.token;\n      // verify user is who they say they are\n      const decodedToken = await auth.verifyIdToken(token);\n      if (decodedToken.uid == uid) {\n        return wrapped.apply(this, arguments);\n      } else {\n        throw new Error(\"decoded uid did not match passed uid\");\n      }\n    } catch (error) {\n      Sentry.captureException(error);\n      return res.status(403).send(\"Could not validate token\");\n    }\n  };\n}\n"],"file":"authenticate.js"}