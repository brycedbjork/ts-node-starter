{"version":3,"sources":["../../../src/services/chat/updateChat.ts"],"names":["updateChat","chatId","data","firestore","collection","doc","get","chatDoc","exists","Error","update","updatedChat","req","res","body","job","status","json","send","console","log","Sentry","captureException"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAEO,IAAMA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,MAAP,EAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,oBACnBC,UADmB,CACR,OADQ,EAEnBC,GAFmB,CAEfJ,MAFe,EAGnBK,GAHmB,EADE;;AAAA;AAClBC,YAAAA,OADkB;;AAAA,gBAKnBA,OAAO,CAACC,MALW;AAAA;AAAA;AAAA;;AAAA,kBAMhB,IAAIC,KAAJ,CAAU,qBAAV,CANgB;;AAAA;AAAA;AAAA,mBASlBN,oBACHC,UADG,CACQ,OADR,EAEHC,GAFG,CAECJ,MAFD,EAGHS,MAHG,CAGIR,IAHJ,CATkB;;AAAA;AAAA;AAAA,mBAcE,sBAAQD,MAAR,CAdF;;AAAA;AAclBU,YAAAA,WAdkB;AAAA,6CAgBjBA,WAhBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVX,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;;;;;;0BAmBQ,kBAAOY,GAAP,EAAiBC,GAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEgDD,GAAG,CAACE,IAFpD,EAEHb,MAFG,aAEHA,MAFG,EAEKC,IAFL,aAEKA,IAFL;AAAA;AAAA,mBAIOF,UAAU,CAACC,MAAD,EAASC,IAAT,CAJjB;;AAAA;AAILa,YAAAA,GAJK;AAAA,8CAMJF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CANI;;AAAA;AAAA;AAAA;AAUXF,YAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,kBAArB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAC,YAAAA,MAAM,CAACC,gBAAP;;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { firestore } from \"../../firebase\";\nimport { Chat } from \"../../schemas/Chat\";\nimport * as Sentry from \"@sentry/node\";\nimport { getChat } from \"./getChat\";\n\nexport const updateChat = async (chatId: string, data: object) => {\n  const chatDoc = await firestore\n    .collection(\"chats\")\n    .doc(chatId)\n    .get();\n  if (!chatDoc.exists) {\n    throw new Error(\"Chat does not exist\");\n  }\n\n  await firestore\n    .collection(\"chats\")\n    .doc(chatId)\n    .update(data);\n\n  const updatedChat = await getChat(chatId);\n\n  return updatedChat as Chat;\n};\n\nexport default async (req: any, res: any) => {\n  try {\n    const { chatId, data }: { chatId: string; data: object } = req.body;\n\n    const job = await updateChat(chatId, data);\n\n    return res.status(200).json(job);\n\n    // success\n  } catch (error) {\n    res.status(500).send(\"Something broke!\");\n    console.log(\"Error: \" + error);\n    Sentry.captureException(error);\n  }\n};\n"],"file":"updateChat.js"}