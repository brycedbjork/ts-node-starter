{"version":3,"sources":["../../../src/services/user/locateUser.ts"],"names":["geoFirestore","GeoFirestore","firestore","geoUserLocations","collection","locateUser","uid","coordinates","userData","latitude","longitude","add","id","type","admin","GeoPoint","indexedLocation","Error","doc","update","locationKey","req","res","body","status","send","console","log","Sentry","captureException"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAOA;;AAEA;;;;;;;;;;AAEA,IAAIA,YAAY,GAAG,IAAIC,0BAAJ,CAAiBC,mBAAjB,CAAnB;AACA,IAAMC,gBAAwC,GAAGH,YAAY,CAACI,UAAb,CAC/C,eAD+C,CAAjD;;AAIO,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBACxBC,GADwB,EAExBC,WAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKD,sBAAQD,GAAR,EAAa,IAAb,CALC;;AAAA;AAKlBE,YAAAA,QALkB;AAOxB;AACQC,YAAAA,QARgB,GAQQF,WARR,CAQhBE,QARgB,EAQNC,SARM,GAQQH,WARR,CAQNG,SARM;AAAA;AAAA,mBAS4BP,gBAAgB,CAACQ,GAAjB,CAAqB;AACvEC,cAAAA,EAAE,EAAEN,GADmE;AAEvEO,cAAAA,IAAI,EAAEL,QAAQ,CAACK,IAFwD;AAGvEN,cAAAA,WAAW,EAAE,IAAIO,0BAAMZ,SAAN,CAAgBa,QAApB,CAA6BN,QAA7B,EAAuCC,SAAvC;AAH0D,aAArB,CAT5B;;AAAA;AASlBM,YAAAA,eATkB;;AAAA,gBAcnBA,eAdmB;AAAA;AAAA;AAAA;;AAAA,kBAehB,IAAIC,KAAJ,CAAU,0BAAV,CAfgB;;AAAA;AAAA;AAAA,mBAmBlBf,oBACHE,UADG,CACQ,OADR,EAEHc,GAFG,CAECZ,GAFD,EAGHa,MAHG,CAGI;AACNC,cAAAA,WAAW,EAAEJ,eAAe,CAACJ;AADvB,aAHJ,CAnBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVP,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;;;;;;0BA2BQ,kBAAOgB,GAAP,EAAiBC,GAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQPD,GAAG,CAACE,IARG,EAGTjB,GAHS,aAGTA,GAHS,EAITC,WAJS,aAITA,WAJS;AAAA;AAAA,mBAULF,UAAU,CAACC,GAAD,EAAMC,WAAN,CAVL;;AAAA;AAAA,8CAYJe,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAZI;;AAAA;AAAA;AAAA;AAgBXH,YAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAC,YAAAA,MAAM,CAACC,gBAAP;;AAlBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { firestore } from \"../../firebase\";\nimport admin from \"firebase-admin\";\nimport {\n  GeoFirestore,\n  GeoCollectionReference,\n  GeoDocumentReference,\n  GeoQuery,\n  GeoQuerySnapshot\n} from \"geofirestore\";\nimport * as Sentry from \"@sentry/node\";\nimport authenticate from \"../../utils/authenticate\";\nimport { getUser } from \"../user/getUser\";\n\nlet geoFirestore = new GeoFirestore(firestore);\nconst geoUserLocations: GeoCollectionReference = geoFirestore.collection(\n  \"userLocations\"\n);\n\nexport const locateUser = async (\n  uid: string,\n  coordinates: { latitude: number; longitude: number }\n) => {\n  // get user\n  const userData = await getUser(uid, null);\n\n  // add to location collection\n  const { latitude, longitude } = coordinates;\n  const indexedLocation: GeoDocumentReference = await geoUserLocations.add({\n    id: uid,\n    type: userData.type,\n    coordinates: new admin.firestore.GeoPoint(latitude, longitude)\n  });\n  if (!indexedLocation) {\n    throw new Error(\"Could not index location\");\n  }\n\n  // add indexedLocation to job entity\n  await firestore\n    .collection(\"users\")\n    .doc(uid)\n    .update({\n      locationKey: indexedLocation.id\n    });\n};\n\nexport default async (req: any, res: any) => {\n  try {\n    const {\n      uid,\n      coordinates\n    }: {\n      uid: string;\n      coordinates: { latitude: number; longitude: number };\n    } = req.body;\n\n    await locateUser(uid, coordinates);\n\n    return res.status(200).send();\n\n    // success\n  } catch (error) {\n    res.status(500).send(error);\n    console.log(\"Error: \" + error);\n    Sentry.captureException(error);\n  }\n};\n"],"file":"locateUser.js"}