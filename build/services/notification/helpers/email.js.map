{"version":3,"sources":["../../../../src/services/notification/helpers/email.ts"],"names":["sendgrid","setApiKey","process","env","SENDGRID_KEY","options","uid","type","userEmail","jobId","jobData","chatId","message","fromData","userData","requestData","requestId","link","referral","emails","push","email","userPromises","map","singleId","Promise","all","usersData","user","Error","newMessage","to","from","templateId","dynamicTemplateData","timing","format","sendMultiple"],"mappings":"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","sourcesContent":["import { getUser } from \"../../user/getUser\";\nimport { getJob } from \"../../job/getJob\";\nimport sendgrid from \"@sendgrid/mail\";\nimport { Student, Hirer } from \"../../../schemas/User\";\nimport { WebReferral, DirectReferral } from \"../../../schemas/Refer\";\nimport { Job } from \"../../../schemas/Job\";\nimport { RecommendationRequest } from \"../../../schemas/Recommend\";\nimport moment from \"moment\";\nsendgrid.setApiKey(<string>process.env.SENDGRID_KEY);\n\nexport interface EmailOptions {\n  uid?: string | string[];\n  type:\n    | \"nearbyJob\"\n    | \"newMessage\"\n    | \"jobClaimed\"\n    | \"recommendationRequest\"\n    | \"invitedJob\"\n    | \"referral\";\n  userEmail?: string | string[];\n  jobId?: string;\n  jobData?: object;\n  chatId?: string;\n  message?: string;\n  fromData?: Student | Hirer;\n  userData?: Student | Hirer;\n  requestData?: RecommendationRequest;\n  requestId?: string;\n  link?: string;\n  referral?: WebReferral | DirectReferral;\n}\nexport default async (options: EmailOptions) => {\n  let {\n    uid,\n    type,\n    userEmail,\n    jobId,\n    jobData,\n    chatId,\n    message,\n    fromData,\n    userData,\n    requestData,\n    requestId,\n    link,\n    referral\n  } = options;\n  // create array of email addresses to send to\n  let emails = [];\n  if (!userEmail) {\n    if (typeof uid === \"string\") {\n      // single user\n      const userData = await getUser(uid, null);\n      emails.push(userData.email);\n    } else {\n      const userPromises = (<string[]>uid).map(singleId =>\n        getUser(singleId, null)\n      );\n      const usersData = await Promise.all(userPromises);\n      emails = usersData.map(user => user.email);\n    }\n  } else {\n    emails = typeof userEmail === \"string\" ? [userEmail] : userEmail;\n  }\n\n  let newMessage: any;\n  switch (type) {\n    case \"nearbyJob\":\n      // nearby job notification\n      if (!jobId) throw new Error(\"No job specified\");\n      if (!jobData) {\n        jobData = await getJob(jobId);\n      }\n      newMessage = {\n        to: emails,\n        from: \"no-reply@hireastudent.org\",\n        templateId: \"d-5ce99e0ba4bf45e189fcf9b8cf25b111\",\n        dynamicTemplateData: {\n          jobId,\n          jobData,\n          timing:\n            (<Job>jobData).timing == \"flexible\"\n              ? \"flexible\"\n              : moment((<Job>jobData).timing).format(\"dddd MMMM D h:mma\")\n        }\n      };\n      break;\n\n    case \"newMessage\":\n      // chat notification\n      if (!jobId) throw new Error(\"No job specified\");\n      if (!jobData) {\n        jobData = await getJob(jobId);\n      }\n      newMessage = {\n        to: emails,\n        from: \"no-reply@hireastudent.org\",\n        templateId: \"d-db778208d3e64368957adc5e491fc7f3\",\n        dynamicTemplateData: {\n          chatId,\n          fromData,\n          message\n        }\n      };\n      break;\n\n    case \"recommendationRequest\":\n      // chat notification\n      if (!requestData) throw new Error(\"No request passed\");\n      newMessage = {\n        to: emails,\n        from: \"no-reply@hireastudent.org\",\n        templateId: \"d-0d5ed9a2a06046f695b2573fc900c54b\",\n        dynamicTemplateData: {\n          from: requestData.from,\n          user: userData,\n          message: requestData.message,\n          requestId: requestId\n        }\n      };\n      break;\n\n    case \"invitedJob\":\n      // chat notification\n      if (!jobId) throw new Error(\"No job passed\");\n      newMessage = {\n        to: emails,\n        from: \"no-reply@hireastudent.org\",\n        templateId: \"d-06ed5191499b4f32addd67e1cf7a4f5b\",\n        dynamicTemplateData: {\n          jobId,\n          jobData,\n          timing:\n            (<Job>jobData).timing == \"flexible\"\n              ? \"flexible\"\n              : moment((<Job>jobData).timing).format(\"dddd MMMM D h:mma\")\n        }\n      };\n      break;\n\n    case \"referral\":\n      newMessage = {\n        to: emails,\n        from: \"no-reply@hireastudent.org\",\n        templateId: \"d-2e3c891fc35245d888ab35a552df00cc\",\n        dynamicTemplateData: {\n          link,\n          referral\n        }\n      };\n      break;\n  }\n  await sendgrid.sendMultiple(newMessage);\n};\n"],"file":"email.js"}