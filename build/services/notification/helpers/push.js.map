{"version":3,"sources":["../../../../src/services/notification/helpers/push.ts"],"names":["options","uid","body","title","data","getUsers","push","forEach","singleId","Promise","all","users","pushTokens","userData","pushToken","notification","badge","payload","length","messaging","sendToDevice"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;0BAYe,iBAAOA,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,GADK,GACsBD,OADtB,CACLC,GADK,EACAC,IADA,GACsBF,OADtB,CACAE,IADA,EACMC,KADN,GACsBH,OADtB,CACMG,KADN,EACaC,IADb,GACsBJ,OADtB,CACaI,IADb,EAEb;;AACIC,YAAAA,QAHS,GAGE,EAHF;;AAIb,gBAAI,OAAOJ,GAAP,KAAe,QAAnB,EAA6B;AAC3B;AACAI,cAAAA,QAAQ,CAACC,IAAT,CAAc,sBAAQL,GAAR,EAAa,IAAb,CAAd;AACD,aAHD,MAGO;AACL;AACAA,cAAAA,GAAG,CAACM,OAAJ,CAAY,UAAAC,QAAQ,EAAI;AACtBH,gBAAAA,QAAQ,CAACC,IAAT,CAAc,sBAAQE,QAAR,EAAkB,IAAlB,CAAd;AACD,eAFD;AAGD;;AAZY;AAAA,mBAaOC,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAbP;;AAAA;AAaPM,YAAAA,KAbO;AAcTC,YAAAA,UAdS,GAcc,EAdd;AAebD,YAAAA,KAAK,CAACJ,OAAN,CAAc,UAAAM,QAAQ,EAAI;AACxB,kBAAIA,QAAQ,CAACC,SAAb,EAAwB;AACtBF,gBAAAA,UAAU,CAACN,IAAX,CAAgBO,QAAQ,CAACC,SAAzB;AACD;AACF,aAJD,EAfa,CAqBb;;AACIC,YAAAA,YAtBS,GAsBW;AACtBb,cAAAA,IAAI,EAAJA,IADsB;AAEtBc,cAAAA,KAAK,EAAE,GAFe;AAGtBZ,cAAAA,IAAI,EAAJA;AAHsB,aAtBX;AA2Bb,gBAAID,KAAJ,EAAWY,YAAY,CAACZ,KAAb,GAAqBA,KAArB;AACLc,YAAAA,OA5BO,GA4BqC;AAAEF,cAAAA,YAAY,EAAZA;AAAF,aA5BrC,EA8Bb;;AA9Ba,kBA+BTH,UAAU,CAACM,MAAX,GAAoB,CA/BX;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgCLC,oBAAUC,YAAV,CAAuBR,UAAvB,EAAmCK,OAAnC,CAhCK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { messaging, firestore } from \"../../../firebase\";\nimport admin from \"firebase-admin\";\nimport { getUser } from \"../../user/getUser\";\n\n/*\nSends out push notification(s)\n*/\n\nexport interface PushOptions {\n  uid: string | string[];\n  body: string;\n  title?: string;\n  data?: object;\n}\nexport default async (options: PushOptions) => {\n  const { uid, body, title, data } = options;\n  // get all push tokens\n  let getUsers = [];\n  if (typeof uid === \"string\") {\n    // single user\n    getUsers.push(getUser(uid, null));\n  } else {\n    // multiple users\n    uid.forEach(singleId => {\n      getUsers.push(getUser(singleId, null));\n    });\n  }\n  const users = await Promise.all(getUsers);\n  let pushTokens: string[] = [];\n  users.forEach(userData => {\n    if (userData.pushToken) {\n      pushTokens.push(userData.pushToken);\n    }\n  });\n\n  // construct payload\n  let notification: any = {\n    body,\n    badge: \"1\",\n    data\n  };\n  if (title) notification.title = title;\n  const payload: admin.messaging.MessagingPayload = { notification };\n\n  // send push\n  if (pushTokens.length > 0) {\n    await messaging.sendToDevice(pushTokens, payload);\n  }\n};\n"],"file":"push.js"}